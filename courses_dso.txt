~~~~~CS 441 Applied Machine Learning~~~~~
Techniques of machine learning to various signal problems: regression, including linear regression, multiple regression, regression forest and nearest neighbors regression; classification with various methods, including logistic regression, support vector machines, nearest neighbors, simple boosting and decision forests; clustering with various methods, including basic agglomerative clustering and k-means; resampling methods, including cross-validation and the bootstrap; model selection methods, including AIC, stepwise selection and the lasso; hidden Markov models; model estimation in the presence of missing variables; and neural networks, including deep networks. The course will focus on tool-oriented and problem-oriented exposition. Application areas include computer vision, natural language, interpreting accelerometer data, and understanding audio data. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 361.
~~~~~CS 445 Computational Photography~~~~~
Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.
~~~~~CS 447 Natural Language Processing~~~~~
Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: One of CS 173 or MATH 213; CS 225; CS 374 or ECE 374; one of CS 361, STAT 361, ECE 313, MATH 362, MATH 461, MATH 463, STAT 400 or BIOE 310; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406 or BIOE 210.
~~~~~CS 598 Deep Learning for Healthcare~~~~~
Welcome to Deep Learning for Healthcare. This course covers deep learning (DL) methods, healthcare data and applications using DL methods. The courses include activities such as video lectures, self guided programming labs, homework assignments (both written and programming), and a large project.  The first phase of the course will include video lectures on different DL and health applications topics, self- guided labs and multiple homework assignments. In this phase, you will build up your knowledge and experience in developing practical deep learning models on healthcare data. The second phase of the course will be a large project that can lead to a technical report and functioning demo of the deep learning models for addressing some specific healthcare problems. We expect the best projects can potentially lead to scientific publications.   Welcome to Deep Learning for Healthcare. This course covers deep learning (DL) methods, healthcare data and applications using DL methods. The courses include activities such as video lectures, self guided programming labs, homework assignments (both written and programming), and a large project.  The first phase of the course will include video lectures on different DL and health applications topics, self- guided labs and multiple homework assignments. In this phase, you will build up your knowledge and experience in developing practical deep learning models on healthcare data. The second phase of the course will be a large project that can lead to a technical report and functioning demo of the deep learning models for addressing some specific healthcare problems. We expect the best projects can potentially lead to scientific publications.   Welcome to Deep Learning for Healthcare. This course covers deep learning (DL) methods, healthcare data and applications using DL methods. The courses include activities such as video lectures, self guided programming labs, homework assignments (both written and programming), and a large project.  The first phase of the course will include video lectures on different DL and health applications topics, self- guided labs and multiple homework assignments. In this phase, you will build up your knowledge and experience in developing practical deep learning models on healthcare data. The second phase of the course will be a large project that can lead to a technical report and functioning demo of the deep learning models for addressing some specific healthcare problems. We expect the best projects can potentially lead to scientific publications.
~~~~~CS 410 Text Information Systems~~~~~
The growth of “big data” created unprecedented opportunities to leverage computational and statistical approaches, which turn raw data into actionable knowledge that can support various application tasks. This is especially true for the optimization of decision making in virtually all application domains, such as health and medicine, security and safety, learning and education, scientific discovery, and business intelligence. This course covers general computational techniques for building intelligent text information systems to help users manage and make use of large amounts of text data in all kinds of applications. Text data include all data in the form of natural language text (e.g., English text or Chinese text), including all web pages, social media data such as tweets, news, scientific literature, emails, government documents, and many other kinds of enterprise data. Text data play an essential role in our lives. Since we communicate using natural languages, we produce and consume a large amount of text data every day covering all kinds of topics. The explosive growth of text data makes it impossible for people to consume all the relevant text data in a timely manner. The two main techniques to assist people in consuming, digesting, and making use of the text data are: 1.Text retrieval, which helps identify the most relevant text data to a particular problem from a large collection of text documents, thus avoiding processing a large number of non -relevant documents 2.Text mining, which helps users further analyze and digest the found relevant text data and extract actionable knowledge for finishing a task This course covers both text retrieval and text mining, so as to provide you with the opportunity to see the complete spectrum of techniques used in building an intelligent text information system. Building on two MOOCs covering the same topic and including a course project, this course enables you to learn the basic concepts, principles, and general techniques in text retrieval and mining, as well as gain hands -on experience with using software tools to develop interesting text data applications.  Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
~~~~~CS 411 Database Systems~~~~~
As the first introductory course for databases, this courses tudies the fundamentals of using and implementing relational and non-relation al database managements ystems. First, from the user perspective (i.e., how tou se a database system), the course will discuss conceptual data modeling, physical data modeling, computing on data, designing schemas, querying databases, and manipulating databas es. We wills tudy both the relational and “NoSQL” d atabases such as document and graph  databases. Further, from the system perspective (i.e., how tod esign and implement ad atabase system), the course wills tudy data representation, data accessing and inde xing, query processing and optimization, and transaction processing.  Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
~~~~~CS 412 Introduction to Data Mining~~~~~
This course is an introductory course on data mining. It introduces the basic concepts, principles, methods, implementation techniques, and applications of data mining, with a focus on two major data mining functions:(1) pattern discovery and(2) cluster analysis. In the first part of the course, which focuses on pattern discovery, you will learn why pattern discovery is important, what the major tricks are for efficient pattern mining, and how to apply pattern discovery in some interesting applications. The course provides you the opportunity to learn concepts, principles, and skills to practice and engage in scalable pattern discovery methods on massive data; discuss pattern evaluation measures; study methods for mining diverse kinds of frequent patterns, sequential patterns, and sub- graph patterns; and study constraint -based pattern mining, pattern- based classification, and explore their applications. In the second part of the course, which focuses on cluster analysis, you will learn concepts and methodologies for cluster analysis, which is also known as clustering, data segmentation, or unsupervised learning. We will introduce the basic concepts of cluster analysis and then study a set of typical clustering methodologies, algorithms, and applications. This includes partitioning methods, such ask -means, hierarchical methods, such as BIRCH, density -based methods, such as DBSCAN, and grid- based methods, such as CLIQUE. We will also discuss methods for clustering validation. The learning will be enhanced by clustering software and programming assignments. The technical contents of the course are based on the textbook Data Mining: Concepts and Techniques (3 rd ed), as well as the on- campus course CS412 –Introduction to Data Mining, which is offered in the Department of Computer Science at the University of Illinois. Please note several themes covered in the textbook are not covered in this online course, including(1) data preprocessing and preparation,(2) data warehouse and data cube technology, and(3) classification. This is because these themes have been covered or will be covered, with possible in- depth treatment, in several other courses offered in the Data Science Online Master program. Therefore, this course will focus on the in- depth study of the two major data mining functions illustrated above.  Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
~~~~~CS 416 Data Visualization~~~~~
Welcome to CS416 :Data Visualization! In this course, you will be introduced to and learn to effectively use tools like Tableau, Excel, and the D3.js library to connect to data sources and effectively display data. During the first half of the course, you will learn how to make more effective visualizations of data. Not only will you gain deeper insight into the data, but you will also learn how to better communicate that insight to others. You will learn new ways to display data, applying some fundamental principles of design and human cognition to choose the most effective way to display different kinds of data. The programming will be fairly simple during the first half of the course, when you will learn how to use popular applications like Tableau and Excel to connect to data warehouses, how to extract and visualize relevant data, and how sophisticated visualization systems like Tableau work. In the second half of the course, we'll shift our focus to interactive storytelling. You'll set up interactive web pages similar to those featured on the New York Times website, create visualizations that allow viewers from all backgrounds to interact with data, and gain insight into data through the data's presentation. The second half of this course will require web programming using JavaScript and the D3.js library. You will learn about interactive web graphics programming in the Scalable Vector Graphics (SVG) format, as well as some fundamentals of 2-Dand some3-D graphics. In addition to this, you'll learn about human visual perception and how user interface design makes for more effective visualization, manipulation, and understanding. You will also learn some advanced methods for interacting with data through immersive virtual reality interfaces.
~~~~~CS 519 Scientific Visualization~~~~~
Welcome to CS519: Scientific Visualization! In this course, you will be introduced to techniques and tools to effectively visualize, investigate, and understand scientific data. In addition to gaining a working knowledge of existing visualization tools, you will come to understand a set of core visualization algorithms at a deep level and be introduced to current research in visualization. The course will require programming using Python and JavaScript... but mostly Python. If you are unfamiliar with these, you might want to get a head start and work through the following: •A very basic Python tutorial offered by Microsoft •Or...alternatively...a set of videos introducing Python programming. •A tutorial on the Python scientific computing package Numpy •Mozilla tutorials on HTML and JavaScript programming . Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. Course Information: Same as CSE 527. 4 graduate hours. No professional credit. Prerequisite: CS 418 or CSE 427.
~~~~~CS 425 Distributed Systems ( Cloud Computing Concepts)~~~~~
Cloud computing systems today, whether open-s ource or used inside companies, are built using a common set of core techniques, algorithms, and design philosophies –all centered around distributed systems. Learn about such fundamental dis tributed computing "concepts" for cloud computing. Some of these concepts include: clouds, MapReduce, key-v alue/NoSQL stores, classical distributed algorithms, widely-u sed distributed algorithms, scalability, trending areas, and much, much more! Know how theses ystems work from the ins ide out. Get your hands dirty using these concepts with provided homework exercises. In the programming assignments, implement some of these concepts in template code (programs) provided in the C++ programming language. Prior experience with C++ is required. The course also features interviews with leading researchers and managers, from both industry and academia. Main
~~~~~CS 435 Cloud Networking~~~~~
Computer communication networks are among the most important and influential global infrastructures that humanity has created. The goal of this course is to provide a foundational view of communication networks, with a focus on networks enabling modern hyperscale cloud computing. In the first part of this course, we’ll study the principles upon which the Internet and other computer networks are built, and how those principles translate into deployed protocols. In the second part of this course, we build on those principles to learn how to build a network infrastructure that provides the agility to deploy virtual networks on a shared infrastructure, that enables both efficient transfer of big data and low latency communication, and that enables applications to be federated across countries and continents. Topics will include: switching; intradomain routing; the Internet Protocol and interdomain networking; reliability, flow control, congestion control, and their embodiment in TCP; quality of service; network applications; cloud network requirements and traffic patterns; data center network architecture; virtualized and software-defined networks; and wide-area connectivity. The course will involve a significant amount of Unix-based network programming and assumes familiarity with Cor C++. Two shorter programming projects employ Python. Students will implement realistic network protocols, and gain the perspective of real-world networking challenges through interviews with industry professionals and academic researchers. Provides a foundational view of computer networks with a focus on enabling modern large-scale cloud computing. The first part of this course studies the principles upon which the Internet and other networks are built, and how those principles translate into deployed protocols. The second part covers how those principles are applied in network infrastructure for modern clouds, enabling deployment of virtual networks on shared infrastructure, efficient transfer of big data and low latency communication, and federation of applications across countries and continents. Course Information: 3 undergraduate hours. 4 graduate hours. Credit is not given for both CS 435 and CS 438/ECE 438. Prerequisite: One of CS 240, CS 241, CS 340, CS 341 or ECE 391.
~~~~~CS 437 Internet of Things~~~~~
The Internet of Things (IoT) stands to be the next revolution in computing. Billions of data- spouting devices connected to the Internet are already fundamentally changing the way we live and work. This course teaches a deep understanding of IoT technologie s from the ground up. Students will learn IoT device programming (Arduino and Raspberry Pi), sensing and actuating  technologies, IoT protocol stacks (Zigbee, 5G, NFC, MQTT, etc), networking backhaul design and security enforcement, data science for IoT, and cloud -based IoT platforms such as AWS IoT. Students will be guided through laboratory assignments designed to give them practical real- world experience, where they will deploy a distributed wifi monitoring service, a cloud -based IoT service platform serving tens of thousands of heartbeat sensors, and more. Students will emerge from the class with a cutting -edge education on this rapidly emerging technology segment, and with the confidence to carry out tasks they will commonly encounter in industrial settings.
~~~~~CS 498 Cloud Computing Applications~~~~~
Welcome to CS498: Cloud Computing Applications! This 17-week course is designed to give you a comprehensive view of the world of cloud computing and Big Data. Each week has between 3to 5hours of learning material (video lectures+ readings), a quiz (usually1 hour), and for most weeks a programming assignment. You should expect to spend10 -12hours per week on this course in average. Please note that the times specified for the programming assignments are averages. This means that some students may finish the assignment in2 hours, and a few others may need to spend20 hours or more on an MP. Likewise, some weeks have more training material than others. Since all course material is available from day1, we expect you to proactively plan your schedule in advance. The programming assignments are a major component of the learning process of this course, and to some extent they are designed as self -learning and exploration opportunities. They are all auto- graded, and you have unlimited number of tries before each assignment’s deadline. In this course we cover a multitude of technologies that comprise the modern stack of cloud computing. Cloud computing is an information technology revolution that has impact ed many enterprise computing systems in major ways, and it will change the face of computing in the years to come. We start by introducing some major concepts in cloud computing, the economical foundations of cloud computing, and the concept of Big Data. We also cover the concept of software defined architectures, and how cloud service providers organize their offerings. We also will compare Infrastructure as a Service offered by the big three: Amazon, Google, and Microsoft, including Infrastructure as a Service, Platform as a Service, and Software as a Service along a few others.   Serverless computing has gained massive popularity in recent years, as it is both economical and easy to use and deploy. We cover serverless computing, serverless storage, and middleware required to weave on -site or end -user applications to serverless resources. We then shift our focus slightly to the topic of big data programming, and how Big Data systems are now mainly deployed in cloud environments. We cover MapReduce programming in both Apache Hadoop and Apache Spark. The next three weeks focus on cloud storage services. We introduce cloud object storage systems, virtual hard drives (block storage), and virtual archival storage options, including a discussion of Dropbox. This course also introduces large -scale data storage, along with the difficulties and problems of consensus in enormous stores that use large quantities of processors, memories, and disks. We also present distributed key-value stores and in-memory databases used for caching layers (e.g.  Memcached and Redis) used in data centers for performance. Next we present NewSQL and No SQL Databases in the cloud. We visit HBase, the scalable, low latency database that supports database operations in applications that use Hadoop. Then, we will show how Spark SQL can program SQL queries on huge data and present Distributed Publish/Subscribe systems using Kafka, a distributed log messaging system that is finding wide use in connecting Big Data and streaming applications together to form complex systems. Right after the midterm exam (which is proctored by the ProctorU service), we switch to higher end applications in the cloud. We start by exploring how the Cloud opens up data analytics to huge volumes of data that are static or streamed at high velocity and represent an enormous variety of information. Cloud applications and data analytics represent a disruptive change in the ways that society is informed by, and uses information. We also introduce some common enterprise-level analytics applications that are offered by major cloud providers. We then look at graph processing, graph databases and machine learning in the cloud. We introduce the ideas of graph processing and present Pregel, Giraph, and Spark GraphX, as well as machine learning. Spark ML and Mllib continue the theme of programmability and application construction. We also cover the Machine Learning lifecycle, and how different cloud services contribute to it. We then turn our attention to Fast Data systems, such as Apache Storm and Flux. We disc uss real -time data streaming and introduce Storm technology that is used widely in the industry. We continue with Spark Streaming, Lambda and Kappa architectures, and a lesson on a complete streaming ecosystem. After that, we move on to the topics of virtualization and containers, which is a fundamental technology behind many cloud- based services. We cover virtualization and containers with a deeper focus, including lectures on Docker, Docker Compose, ECS, Kubernates and Infrastructure as Code. Finally, we wrap up the course by talking about the future trends, and wraps up with an interview with an industry -expert cloud architect.
~~~~~CS 513 Theory and Practice of Data Cleaning~~~~~
Data cleaning is an essential but often under-a ppreciated part of data science. Somes urveys report that data scientistss pend around80% of their time cleaning, wrangling, or “munging” data before data is ready to be analyzed. This course is an introduction to the theory and practice of data cleaning. We will first provide a brief overview on different dimens ions of data quality. We then will turn our attention to syntactic (i.e., pattern-b ased) data quality is sues. In the first hands-o n module, we will work with regular expressions to match and extract data. We will then use  OpenRefine, a powerful open source tool for cleaning individual data columns (e.g., through common transformations and operations that are used to obtain a canonical form of data). Moving on from syntactic to schema and semantic issues, we will work with both Datalog and SQL(ite) to express and check high-l evel integrity constraints. Finally, we will learn about workflow, provenance modeling, and querying techniques that allow users to reveal important dataflow.
~~~~~CS 598 Foundations of Data Curation~~~~~
Welcome to CS598 Data Curation! Data curation is the active and on-going management of data through its lifecycle of interest and usefulness to scholarship, science, and education; curation activities and policies enable data discovery and retrieval, maintain data quality and add value, and provide for re-use over time. This course provides an overview of a broad range of theoretical and practical problems in the emerging field, examining issues related to appraisal and selection, long- lived data collections, research lifecycles, workflows, metadata, and legal and intellectual property issues.
~~~~~CS 598 Practical Statistical Learning*~~~~~
This course provides an introduction to modern techniques for statistical analysis of complex and massive data. Examples of these are model selection for regression/classification, nonparametric models including splines and kernel models, regularization, dimension reduction, and clustering analysis. Applications are discuss ed as well as computation and theoretical foundations.
~~~~~CS 598 Advanced Bayesian Modeling~~~~~
Welcome to CS598 Advanced Bayesian Modeling! This course explores practical methods and models for Bayesian data analysis. The major topics include Bayesian fundamentals, prior selection, posterior inference tools, hierarchical models, methods of Bayesian computation, model evaluation, and ordinary and generalized regression models. In particular, there will be an emphasis on computational implementation. To be successful in this course, we recommend that you have taken STAT 420and are comfortable using R.
~~~~~CS 598 Cloud Computing Capstone*~~~~~
This course will allow you to apply the algorithms and techniques for cloud computing that you learned in Cloud Computing Concepts and Cloud Computing Applications to solve novel and challenging cloud computing research problems.
~~~~~CS 598 Data Mining Capstone*~~~~~
The Data Mining Capstone course provides an opportunity for those students who have already taken multiple topic courses in the general ar ea of data mining to further extend their knowledge and skills of data mining through both reading recent research papers and working on an open- ended real-world data mining project.(
~~~~~CS 418 Interactive Computer Graphics~~~~~
Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Course Information: Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; One of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, or BIOE 210; MATH 241.
~~~~~CS 421 Programming Languages and Compilers~~~~~
Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: One of CS 233, CS 240, CS 340 or ECE 391; CS 374 or ECE 374; one of MATH 225, MATH 257, MATH 415, MATH 416, ASRM 406, or BIOE 210.
~~~~~CS 427 Software Engineering I~~~~~
This course introduces students to the discipline of software engineering, with focus on principles, processes, and techniques of conducting software engineering tasks related to constructing, maintaining, and testing software. By the end of the course, students will be able to explain what processes or techniques are available for conducting a software engineering task, and choose appropriate processes or techniques for such task in the given application context. Students will be able to apply a technique for a software engineering task in the given application context.  Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Course Information: Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: One of CS 222, CS 240, CS 241, CS 340, CS 341 or ECE 391.
~~~~~CS 450 Numerical Analysis~~~~~
Numerical solution of mathematical problems arising in computational modeling and data analysis, including proper problem formulation, selection of effective solution algorithms, and interpretation of results. First half of course focuses on algebraic problems, including linear and nonlinear algebraic equations, eigenvalue problems, and optimization. Second half of course focuses on analytic problems, including numerical integration and differentiation and initial and boundary value problems for differential equations.Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Course Information: Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given toward graduation for both CS 450 and CS 457. Prerequisite: One of CS 101, CS 124 or CS 125; one of CS 357, MATH 257, MATH 357, MATH 415, or MATH 416; MATH 285.
~~~~~CS 463 Computer Security II~~~~~
Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Course Information: Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.
~~~~~CS 475 Formal Models of Computation~~~~~
Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Course Information: Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 374 or ECE 374.
~~~~~CS 484 Parallel Programming~~~~~
This course is about writing effective programs to harness the unprecedented power provided by modern parallel computers, so that the programs attain the highest possible levels of performance the machines are capable of. The parallel computers we focus on include multi-core processors as well as clusters and supercomputers made from them. The programming systems and methodologies we learn will include OpenMP, Pthreads, MPI and Charm++. However, the focus of the course is not so much on the mechanics of these programming systems as on how to use them to attain and improve high performance. This performance orientation pervades throughout the course, and is enhanced by several case studies, small enough to understanding the lecture format yet complex enough to illustrate performance issues and trade-offs. The course also teaches an adequate analytical framework for understanding performance, including performance models, scalability analysis, and iso-efficiency.   Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. Course Information: 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or CS 341.
~~~~~STAT 420 Methods of Applied Statistics~~~~~
In Statistical Modeling in R you will learn both theoretical and practical techniques for applying models to data. Focus will be placed on regression models, which are used to model a variable of interest as a function of explanatory variables. For example, which variables are significant predictors for the success of a restaurant? What factors make for a fuel efficient car? Can you make accurate predictions of the opening weekend gross of a new film?  You will learn the mathematical fundamentals of linear models, a broad range of models that are the first line of defense in numerous application areas. By the end of the course, you will be able to critique and distinguish variables and models that are useful for predicting and explaining the behavior of a response variable of interest. Additionally, you will work with the R programming language to perform analyses and generate reproducible reports.
